<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>
        <import type="android.view.View"/>
        <import type="top.defaults.gradientdrawabletuner.R"/>
        <variable
            name="viewModel"
            type="top.defaults.gradientdrawabletuner.GradientDrawableViewModel"/>
        <variable
            name="maxWidth"
            type="Integer"/>
        <variable
            name="maxHeight"
            type="Integer"/>
    </data>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <RelativeLayout
            android:id="@+id/background"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="8dp">
            <ImageView
                android:id="@+id/imageView"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_centerInParent="true"
                android:src="@{viewModel.gradientDrawable}"/>
        </RelativeLayout>

        <ScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:padding="8dp">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical">

                <RadioGroup
                    android:id="@+id/shape"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:checkedButton="@{viewModel.drawableProperties.shapeId}">

                    <RadioButton
                        android:id="@+id/rectangle"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="rectangle"/>

                    <RadioButton
                        android:id="@+id/oval"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="oval"/>

                    <RadioButton
                        android:id="@+id/line"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="line"/>

                    <RadioButton
                        android:id="@+id/ring"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="ring"/>
                </RadioGroup>

                <com.google.android.flexbox.FlexboxLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    app:flexWrap="wrap"
                    app:alignItems="flex_start" >

                    <top.defaults.gradientdrawabletuner.ColorIndicator
                        android:id="@+id/strokeColor"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="stroke color"
                        app:onColorChange='@{(v, color) -> viewModel.updateProperty("strokeColor", color)}'
                        app:color="@{viewModel.drawableProperties.strokeColor}"/>

                    <top.defaults.gradientdrawabletuner.ColorIndicator
                        android:id="@+id/solidColor"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="solid color"
                        app:onColorChange='@{(v, color) -> viewModel.updateProperty("solidColor", color)}'
                        app:color="@{viewModel.drawableProperties.solidColor}"/>

                </com.google.android.flexbox.FlexboxLayout>

                <android.support.constraint.ConstraintLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:animateLayoutChanges="true">

                    <android.support.constraint.Group
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:visibility="@{viewModel.drawableProperties.shapeId == R.id.ring ? View.VISIBLE : View.GONE}"
                        app:constraint_referenced_ids="innerRadiusRow, innerRadiusRatioRow, thicknessRow, thicknessRatioRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/innerRadiusRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:title="innerRadius"
                        app:valueForTitle='@{viewModel.drawableProperties.innerRadius}'
                        app:max="@{viewModel.drawableProperties.width / 2}"
                        app:value="@{viewModel.drawableProperties.innerRadius + 1}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("innerRadius", value - 1)}'/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/innerRadiusRatioRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:enabled="@{viewModel.drawableProperties.innerRadius == -1}"
                        app:title="» ratio"
                        app:valueForTitle='@{viewModel.drawableProperties.innerRadiusRatio}'
                        app:max="@{viewModel.drawableProperties.width / 2}"
                        app:value="@{(int)(viewModel.drawableProperties.innerRadiusRatio * 10 - 20)}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("innerRadiusRatio", (float)(value + 20) / 10f)}'
                        app:layout_constraintTop_toBottomOf="@+id/innerRadiusRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/thicknessRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:title="thickness"
                        app:valueForTitle='@{viewModel.drawableProperties.thickness}'
                        app:max="@{viewModel.drawableProperties.width / 2}"
                        app:value="@{viewModel.drawableProperties.thickness + 1}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("thickness", value - 1)}'
                        app:layout_constraintTop_toBottomOf="@+id/innerRadiusRatioRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/thicknessRatioRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:enabled="@{viewModel.drawableProperties.thickness == -1}"
                        app:title="» ratio"
                        app:valueForTitle='@{viewModel.drawableProperties.thicknessRatio}'
                        app:max="@{viewModel.drawableProperties.width / 2}"
                        app:value="@{(int)(viewModel.drawableProperties.thicknessRatio * 10 - 10)}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("thicknessRatio", (float)(value + 10) / 10f)}'
                        app:layout_constraintTop_toBottomOf="@+id/thicknessRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/widthRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:title="width"
                        app:valueForTitle="@{viewModel.drawableProperties.width}"
                        app:max="@{safeUnbox(maxWidth)}"
                        app:value="@{viewModel.drawableProperties.width}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("width", value)}'
                        app:layout_constraintTop_toBottomOf="@+id/thicknessRatioRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/heightRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:title="height"
                        app:valueForTitle="@{viewModel.drawableProperties.height}"
                        app:max="@{safeUnbox(maxHeight)}"
                        app:value="@{viewModel.drawableProperties.height}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("height", value)}'
                        app:layout_constraintTop_toBottomOf="@+id/widthRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/cornerRadiusRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:visibility="@{viewModel.drawableProperties.shapeId == R.id.rectangle ? View.VISIBLE : View.GONE}"
                        app:extensionsName="+"
                        app:title="radius"
                        app:valueForTitle="@{viewModel.drawableProperties.cornerRadius}"
                        app:max="@{viewModel.drawableProperties.width / 2}"
                        app:value="@{viewModel.drawableProperties.cornerRadius}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("cornerRadius", value)}'
                        app:layout_constraintTop_toBottomOf="@+id/heightRow"/>

                    <android.support.constraint.Group
                        android:id="@+id/fourCorners"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:visibility="gone"
                        app:constraint_referenced_ids="topLeftRadiusRow, topRightRadiusRow, bottomLeftRadiusRow, bottomRightRadiusRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/topLeftRadiusRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginLeft="32dp"
                        android:layout_marginStart="32dp"
                        app:title="» tl"
                        app:valueForTitle="@{viewModel.drawableProperties.topLeftRadius}"
                        app:max="@{viewModel.drawableProperties.width / 2}"
                        app:value="@{viewModel.drawableProperties.topLeftRadius}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("topLeftRadius", value)}'
                        app:layout_constraintTop_toBottomOf="@+id/cornerRadiusRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/topRightRadiusRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginLeft="32dp"
                        android:layout_marginStart="32dp"
                        app:title="» tr"
                        app:valueForTitle="@{viewModel.drawableProperties.topRightRadius}"
                        app:max="@{viewModel.drawableProperties.width / 2}"
                        app:value="@{viewModel.drawableProperties.topRightRadius}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("topRightRadius", value)}'
                        app:layout_constraintTop_toBottomOf="@+id/topLeftRadiusRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/bottomLeftRadiusRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginLeft="32dp"
                        android:layout_marginStart="32dp"
                        app:title="» bl"
                        app:valueForTitle="@{viewModel.drawableProperties.bottomLeftRadius}"
                        app:max="@{viewModel.drawableProperties.width / 2}"
                        app:value="@{viewModel.drawableProperties.bottomLeftRadius}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("bottomLeftRadius", value)}'
                        app:layout_constraintTop_toBottomOf="@+id/topRightRadiusRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/bottomRightRadiusRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginLeft="32dp"
                        android:layout_marginStart="32dp"
                        app:title="» br"
                        app:valueForTitle="@{viewModel.drawableProperties.bottomRightRadius}"
                        app:max="@{viewModel.drawableProperties.width / 2}"
                        app:value="@{viewModel.drawableProperties.bottomRightRadius}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("bottomRightRadius", value)}'
                        app:layout_constraintTop_toBottomOf="@+id/bottomLeftRadiusRow"/>

                    <android.support.constraint.Barrier
                        android:id="@+id/cornerRadiusBarrier"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        app:constraint_referenced_ids="topLeftRadiusRow, topRightRadiusRow, bottomLeftRadiusRow, bottomRightRadiusRow"
                        app:barrierDirection="bottom"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/strokeWidthRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:title="strokeWidth"
                        app:valueForTitle="@{viewModel.drawableProperties.strokeWidth}"
                        app:max="@{viewModel.drawableProperties.width / 2}"
                        app:value="@{viewModel.drawableProperties.strokeWidth}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("strokeWidth", value)}'
                        app:layout_constraintTop_toBottomOf="@+id/cornerRadiusBarrier"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/dashWidthRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:title="dashWidth"
                        app:valueForTitle="@{viewModel.drawableProperties.dashWidth}"
                        app:max="@{viewModel.drawableProperties.width}"
                        app:value="@{viewModel.drawableProperties.dashWidth}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("dashWidth", value)}'
                        app:layout_constraintTop_toBottomOf="@+id/strokeWidthRow"/>

                    <top.defaults.gradientdrawabletuner.ValueRow
                        android:id="@+id/dashGapRow"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:enabled="@{viewModel.drawableProperties.dashWidth > 0}"
                        app:title="dashGap"
                        app:valueForTitle="@{viewModel.drawableProperties.dashGap}"
                        app:max="@{viewModel.drawableProperties.width}"
                        app:value="@{viewModel.drawableProperties.dashGap}"
                        app:onValueChange='@{(valueRow, value) -> viewModel.updateProperty("dashGap", value)}'
                        app:layout_constraintTop_toBottomOf="@+id/dashWidthRow"/>

                </android.support.constraint.ConstraintLayout>
            </LinearLayout>
        </ScrollView>

    </LinearLayout>
</layout>
